[
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Working with Nested Data\nData often comes in a nested structure, where information is organized hierarchically. BigQuery and DuckDB have built-in support for reading tables with nested data and extracting information from these nested structures.\n\nWhen working with nested data in Malloy, it becomes remarkably simple. In Malloy, a nested array or struct is treated as a built-in join_many operation. You can effortlessly access the desired data using dot notation.\n\nFor example, in Google Analytics data, the top level object is sessions. There are repeated structures such as hits, pageviews, and products and more.  Querying this data in SQL is difficult. \n\nBelow is the *partial* schema for Google Analytics. \n\n<img src=\"img/ga_schema.webp\">\n\nTo perform aggregate calculation in Malloy, you can simply specify the complete path to the numeric value and select the appropriate aggregate function. Malloy refers to this as aggregate locality, ensuring accurate calculations regardless of the join pattern used.\n\nWhen writing a query, you can group by any path in this heiracy. Malloy ensures reliable aggregate calculations regardless of how the query is prespress..\n\n\n## A simple Google Analytics Semantic model\n\nAnd a very simple Malloy model describing the interesting some interesting calculations.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "source:ga_sessions is table('duckdb:data/ga_sample.parquet'){\n  measure:\n    user_count is count(distinct fullVisitorId)\n    percent_of_users is user_count/all(user_count)*100\n    session_count is count()\n    total_visits is totals.visits.sum()\n    total_hits is totals.hits.sum()\n    total_page_views is totals.pageviews.sum()\n    t2 is totals.pageviews.sum()\n    total_productRevenue is hits.product.productRevenue.sum()\n    hits_count is hits.count()\n    sold_count is hits.count() { where: hits.product.productQuantity > 0 }\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Show the data by traffic source",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": " query: ga_sessions -> {\n    where: trafficSource.source != '(direct)'\n    group_by: trafficSource.source\n    aggregate: \n      user_count\n      percent_of_users\n      hits_count\n      total_visits\n      session_count\n    limit: 10\n  }",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Show Data by browser",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "  query: ga_sessions -> {\n    group_by: device.browser\n    aggregate: \n      user_count\n      percent_of_users\n      total_visits\n      total_hits\n      total_page_views\n      sold_count\n  }",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## With Nested Results",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "malloy",
    "value": "  query: ga_sessions -> {\n    group_by: device.browser\n    aggregate: \n      user_count\n      percent_of_users\n      total_visits\n      total_hits\n      total_page_views\n      sold_count\n    nest: by_source is {\n      where: trafficSource.source != '(direct)'\n      group_by: trafficSource.source\n      aggregate: \n        user_count\n        percent_of_users\n        hits_count\n        total_visits\n        session_count\n      limit: 10\n    }\n  }",
    "metadata": {}
  }
]